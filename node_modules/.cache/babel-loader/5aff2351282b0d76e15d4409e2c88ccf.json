{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getStateByCode = exports.getStateByCodeAndCountry = exports.getStatesOfCountry = exports.getAllStates = void 0;\n\nvar state_json_1 = __importDefault(require(\"../assets/state.json\"));\n\nvar utils_1 = require(\"../utils\"); // Get a list of all states.\n\n\nfunction getAllStates() {\n  return state_json_1.default;\n}\n\nexports.getAllStates = getAllStates; // Get a list of states belonging to a specific country.\n\nfunction getStatesOfCountry(countryCode) {\n  if (!countryCode) return [];\n  var states = state_json_1.default.filter(function (value) {\n    return value.countryCode === countryCode;\n  });\n  return states.sort(utils_1.compare);\n}\n\nexports.getStatesOfCountry = getStatesOfCountry; // Find a country by it's ISO code and the country in which it is contained.\n\nfunction getStateByCodeAndCountry(stateCode, countryCode) {\n  if (!stateCode) return undefined;\n  if (!countryCode) return undefined;\n  return utils_1.findStateByCodeAndCountryCode(state_json_1.default, stateCode, countryCode);\n}\n\nexports.getStateByCodeAndCountry = getStateByCodeAndCountry; // to be deprecate\n\nfunction getStateByCode(isoCode) {\n  // eslint-disable-next-line no-console\n  console.warn(\"WARNING! 'getStateByCode' has been deprecated, please use the new 'getStateByCodeAndCountry' function instead!\");\n  if (!isoCode) return undefined;\n  return utils_1.findEntryByCode(state_json_1.default, isoCode);\n}\n\nexports.getStateByCode = getStateByCode;\nexports.default = {\n  getAllStates: getAllStates,\n  getStatesOfCountry: getStatesOfCountry,\n  getStateByCodeAndCountry: getStateByCodeAndCountry,\n  getStateByCode: getStateByCode\n};","map":{"version":3,"sources":["D:/React/real-estate/node_modules/country-state-city/dist/lib/state.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","getStateByCode","getStateByCodeAndCountry","getStatesOfCountry","getAllStates","state_json_1","require","utils_1","default","countryCode","states","filter","sort","compare","stateCode","undefined","findStateByCodeAndCountryCode","isoCode","console","warn","findEntryByCode"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,cAAR,GAAyBF,OAAO,CAACG,wBAAR,GAAmCH,OAAO,CAACI,kBAAR,GAA6BJ,OAAO,CAACK,YAAR,GAAuB,KAAK,CAArH;;AACA,IAAIC,YAAY,GAAGX,eAAe,CAACY,OAAO,CAAC,sBAAD,CAAR,CAAlC;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAArB,C,CACA;;;AACA,SAASF,YAAT,GAAwB;AACpB,SAAOC,YAAY,CAACG,OAApB;AACH;;AACDT,OAAO,CAACK,YAAR,GAAuBA,YAAvB,C,CACA;;AACA,SAASD,kBAAT,CAA4BM,WAA5B,EAAyC;AACrC,MAAI,CAACA,WAAL,EACI,OAAO,EAAP;AACJ,MAAIC,MAAM,GAAGL,YAAY,CAACG,OAAb,CAAqBG,MAArB,CAA4B,UAAUX,KAAV,EAAiB;AACtD,WAAOA,KAAK,CAACS,WAAN,KAAsBA,WAA7B;AACH,GAFY,CAAb;AAGA,SAAOC,MAAM,CAACE,IAAP,CAAYL,OAAO,CAACM,OAApB,CAAP;AACH;;AACDd,OAAO,CAACI,kBAAR,GAA6BA,kBAA7B,C,CACA;;AACA,SAASD,wBAAT,CAAkCY,SAAlC,EAA6CL,WAA7C,EAA0D;AACtD,MAAI,CAACK,SAAL,EACI,OAAOC,SAAP;AACJ,MAAI,CAACN,WAAL,EACI,OAAOM,SAAP;AACJ,SAAOR,OAAO,CAACS,6BAAR,CAAsCX,YAAY,CAACG,OAAnD,EAA4DM,SAA5D,EAAuEL,WAAvE,CAAP;AACH;;AACDV,OAAO,CAACG,wBAAR,GAAmCA,wBAAnC,C,CACA;;AACA,SAASD,cAAT,CAAwBgB,OAAxB,EAAiC;AAC7B;AACAC,EAAAA,OAAO,CAACC,IAAR,CAAa,gHAAb;AACA,MAAI,CAACF,OAAL,EACI,OAAOF,SAAP;AACJ,SAAOR,OAAO,CAACa,eAAR,CAAwBf,YAAY,CAACG,OAArC,EAA8CS,OAA9C,CAAP;AACH;;AACDlB,OAAO,CAACE,cAAR,GAAyBA,cAAzB;AACAF,OAAO,CAACS,OAAR,GAAkB;AACdJ,EAAAA,YAAY,EAAEA,YADA;AAEdD,EAAAA,kBAAkB,EAAEA,kBAFN;AAGdD,EAAAA,wBAAwB,EAAEA,wBAHZ;AAIdD,EAAAA,cAAc,EAAEA;AAJF,CAAlB","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getStateByCode = exports.getStateByCodeAndCountry = exports.getStatesOfCountry = exports.getAllStates = void 0;\nvar state_json_1 = __importDefault(require(\"../assets/state.json\"));\nvar utils_1 = require(\"../utils\");\n// Get a list of all states.\nfunction getAllStates() {\n    return state_json_1.default;\n}\nexports.getAllStates = getAllStates;\n// Get a list of states belonging to a specific country.\nfunction getStatesOfCountry(countryCode) {\n    if (!countryCode)\n        return [];\n    var states = state_json_1.default.filter(function (value) {\n        return value.countryCode === countryCode;\n    });\n    return states.sort(utils_1.compare);\n}\nexports.getStatesOfCountry = getStatesOfCountry;\n// Find a country by it's ISO code and the country in which it is contained.\nfunction getStateByCodeAndCountry(stateCode, countryCode) {\n    if (!stateCode)\n        return undefined;\n    if (!countryCode)\n        return undefined;\n    return utils_1.findStateByCodeAndCountryCode(state_json_1.default, stateCode, countryCode);\n}\nexports.getStateByCodeAndCountry = getStateByCodeAndCountry;\n// to be deprecate\nfunction getStateByCode(isoCode) {\n    // eslint-disable-next-line no-console\n    console.warn(\"WARNING! 'getStateByCode' has been deprecated, please use the new 'getStateByCodeAndCountry' function instead!\");\n    if (!isoCode)\n        return undefined;\n    return utils_1.findEntryByCode(state_json_1.default, isoCode);\n}\nexports.getStateByCode = getStateByCode;\nexports.default = {\n    getAllStates: getAllStates,\n    getStatesOfCountry: getStatesOfCountry,\n    getStateByCodeAndCountry: getStateByCodeAndCountry,\n    getStateByCode: getStateByCode,\n};\n"]},"metadata":{},"sourceType":"script"}